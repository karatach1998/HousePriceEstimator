name: build-and-deploy
on: [push]
jobs:
  build-model-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./model_server
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/model-server:latest
            ghcr.io/${{ github.repository_owner }}/model-server:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/karatach1998/model-server:latest
          cache-to: type=inline
  
  build-toolbox:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./toolbox
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/toolbox:latest
            ghcr.io/${{ github.repository_owner }}/toolbox:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/karatach1998/toolbox:latest
          cache-to: type=inline
  
  deploy-to-k8s:
    runs-on: ubuntu-latest
    needs: [build-model-server, build-toolbox]
    steps:
      - uses: actions/checkout@v1
      - name: Helm Deploy
        uses: vimeda/helm@v1.7.0
        with:
          release: 'housepriceestimator'
          namespace: 'default'
          chart: './charts/housepriceestimator'
          token: '${{ github.token }}'
          secrets: '${{ toJSON(secrets) }}'
          values: |
            secrets:
              clickhousePassword: ${{ secrets.CLICKHOUSE_PASSWORD }}
              rabbitmqPassword: ${{ secrets.RABBITMQ_PASSWORD }}
              rabbitmqErlangCookie: ${{ secrets.RABBITMQ_ERLANG_COOKIE }}
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'