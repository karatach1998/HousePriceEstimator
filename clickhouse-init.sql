CREATE TABLE IF NOT EXISTS default.sales_info (
    sale_id UInt32,
    timestamp DateTime('Europe/Moscow'),
    coords Tuple(latitude Float64, longitude Float64),
    address String,
    district String,
    -- --
    num_room String,
    price Int32,
    price_currency FixedString(3),
    -- undergrounds Array(Tuple(branch_color FixedString(7), station_name String, distance_in_min UInt16, distance_in_min_transport UInt16)),
    apartment_type String,
    building_type String,
    decorating String,
    parking String,
    full_sq Float32,
    life_sq Float32 DEFAULT nan,
    kitch_sq Float32 DEFAULT nan,
    height Float32,
    floor UInt8,
    max_floor UInt8,
    build_year UInt32,
    --
    kindergarten_km Float32,
    -- school_km Float32,
    subway_line FixedString(2),
    subway_name String,
    subway_km Float32,
    railroad_id FixedString(16),
    railroad_routes Array(FixedString(16)),
    railroad_km Float32,
    -- public_transport,
    sadovoe_km Float32,
    trr_km Float32,
    mkad_km Float32,
    nuclear_reactor_km Float32,
    -- fitness_km Float32,
    -- swim_pool_km Float32,
    -- basketball_km Float32,
    food_count_500_price_500 UInt16,
    food_count_500_price_1000 UInt16,
    food_count_500_price_1500 UInt16,
    food_count_500_price_2500 UInt16,
    food_count_500_price_4000 UInt16,
    food_count_500_price_more UInt16,
    food_count_500 UInt16,
    sport_count_500 UInt16,
    food_count_1000_price_500 UInt16,
    food_count_1000_price_1000 UInt16,
    food_count_1000_price_1500 UInt16,
    food_count_1000_price_2500 UInt16,
    food_count_1000_price_4000 UInt16,
    food_count_1000_price_more UInt16,
    food_count_1000 UInt16,
    sport_count_1000 UInt16,
    food_count_1500_price_500 UInt16,
    food_count_1500_price_1000 UInt16,
    food_count_1500_price_1500 UInt16,
    food_count_1500_price_2500 UInt16,
    food_count_1500_price_4000 UInt16,
    food_count_1500_price_more UInt16,
    food_count_1500 UInt16,
    sport_count_1500 UInt16,
    food_count_2000_price_500 UInt16,
    food_count_2000_price_1000 UInt16,
    food_count_2000_price_1500 UInt16,
    food_count_2000_price_2500 UInt16,
    food_count_2000_price_4000 UInt16,
    food_count_2000_price_more UInt16,
    food_count_2000 UInt16,
    sport_count_2000 UInt16,
    food_count_3000_price_500 UInt16,
    food_count_3000_price_1000 UInt16,
    food_count_3000_price_1500 UInt16,
    food_count_3000_price_2500 UInt16,
    food_count_3000_price_4000 UInt16,
    food_count_3000_price_more UInt16,
    food_count_3000 UInt16,
    sport_count_3000 UInt16,
    food_count_5000_price_500 UInt16,
    food_count_5000_price_1000 UInt16,
    food_count_5000_price_1500 UInt16,
    food_count_5000_price_2500 UInt16,
    food_count_5000_price_4000 UInt16,
    food_count_5000_price_more UInt16,
    food_count_5000 UInt16,
    sport_count_5000 UInt16,
) ENGINE = MergeTree
  ORDER BY (timestamp, sale_id);